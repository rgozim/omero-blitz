plugins {
    id "java-library"
    id "org.openmicroscopy.blitz-ice"
    id "org.openmicroscopy.blitz-ice-python"
    id "org.openmicroscopy.project" version "5.5.0-SNAPSHOT"
}

group = "org.openmicroscopy"
version = "5.5.3-SNAPSHOT"

repositories {
    mavenLocal()
    jcenter()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

ext {
    databaseType = "psql"
    pythonOutputDir = "$buildDir/toArchive/python"
    iceOutputDir = "$buildDir/toArchive/icedoc"
    generatedDir = "build/${databaseType}"
    generatedSliceDir = "${generatedDir}/slice"
}

dependencies {
    testImplementation("junit:junit:4.12")
    testImplementation("jmock:jmock:1.+")
    testImplementation("org.testng:testng:6.14.2")
    testImplementation('nl.javadude.assumeng:assumeng:1.2.4')
    testImplementation('org.openmicroscopy:omero-common-test:5.5.1')
    testImplementation('org.quartz-scheduler:quartz:2.2.1')

    api("org.openmicroscopy:omero-server:5.5.2")

    implementation("com.sun.activation:javax.activation:1.2.0")
    implementation("org.ini4j:ini4j:0.4.1")
    implementation("commons-beanutils:commons-beanutils:1.9.3")
    implementation("org.apache.xmlgraphics:batik-all:1.9.1")
    implementation("org.apache.httpcomponents:httpclient:4.5.6")
    implementation("org.apache.httpcomponents:httpmime:4.5.6")
    implementation("gnu.getopt:java-getopt:1.0.13")
    implementation("net.sf.ehcache:ehcache:2.10.6")
}

configurations.all {
    exclude group: 'com.google.code.findbugs'
}

test {
    // enable TestNG support (default is JUnit)
    useTestNG() {
        suites "src/test/resources/unit.testng.xml"
    }
}

jar {
    manifest {
        attributes("Main-Class": 'ome.services.blitz.Entry')
    }
}

dsl {
    database "psql"

    singleFile {
        iceMap {
            template "java_ice_map.vm"
            outputFile "java/omero/util/IceMap.java"
        }

        modelObjectFactoryRegistry {
            template "java_obj_reg.vm"
            outputFile "java/omero/util/ModelObjectFactoryRegistry.java"
        }
    }
}

api {
    language {
        java {
            outputDir "java/omero/model"
        }
    }
}

publishing {
    publications {
        blitzIceDocs(MavenPublication) {
            artifact zipIcedoc
        }
        blitzPython(MavenPublication) {
            artifact zipPython
        }
    }
}

compileIcedoc {
    header = file("docs/header.txt")
    footer = file("docs/footer.txt")
}